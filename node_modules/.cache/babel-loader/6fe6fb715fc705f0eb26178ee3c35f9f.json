{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport notify from '../UseNotifaction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createNewUser } from '../../Redux/actions/AuthAction';\n\nconst LogUpHook = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setpasswordConfirm] = useState('');\n  const [loading, setLoading] = useState(true); // input value\n\n  const onChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const onChangeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePasswprd = e => {\n    setPassword(e.target.value);\n  };\n\n  const onChangepasswordConfirm = e => {\n    setpasswordConfirm(e.target.value);\n  }; // Input error\n\n  /* const ValidationValues = () => {\r\n       if (name === \"\") {\r\n           notify(\"Enter Name\", \"error\")\r\n           return;\r\n       }\r\n       if (email === \"\") {\r\n           notify(\"Enter Email\", \"error\")\r\n           return;\r\n       }\r\n       if (password === \"\") {\r\n           notify(\"Enter Password\", \"error\")\r\n           return;\r\n       }\r\n       if (passwordConfirm === \"\") {\r\n           notify(\"ُEnter Confirm Password\", \"error\")\r\n           return;\r\n       }\r\n       if (password !== passwordConfirm) {\r\n           notify(\"من فضلك تاكيد من كلمه السر\", \"error\")\r\n           return;\r\n       }\r\n   }*/\n\n\n  const res = useSelector(state => state.AuthReducer.createUser); // Save Data\n\n  const OnSubmit = async () => {\n    setLoading(true);\n    await dispatch(createNewUser({\n      name,\n      email,\n      password,\n      passwordConfirm\n    }));\n    setLoading(false);\n    console.log(loading);\n  };\n\n  useEffect(() => {\n    if (loading === false) {\n      if (res) {\n        console.log(res);\n\n        if (res.token) {\n          localStorage.setItem(\"token\", res.token);\n          console.log(res.data.token);\n        }\n\n        if (res.data.errors) {\n          notify(\"\", \"\");\n        }\n      }\n    }\n  }, [loading]);\n  return [name, email, password, passwordConfirm, loading, onChangeName, onChangeEmail, onChangePasswprd, onChangepasswordConfirm, OnSubmit];\n};\n\n_s(LogUpHook, \"m00XphisYl0MFC9mU6xsOAlycWc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LogUpHook;\nexport default LogUpHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogUpHook\");","map":{"version":3,"names":["useState","useEffect","notify","useDispatch","useSelector","createNewUser","LogUpHook","dispatch","name","setName","email","setEmail","password","setPassword","passwordConfirm","setpasswordConfirm","loading","setLoading","onChangeName","e","target","value","onChangeEmail","onChangePasswprd","onChangepasswordConfirm","res","state","AuthReducer","createUser","OnSubmit","console","log","token","localStorage","setItem","data","errors"],"sources":["C:/Users/hp-Moon/Desktop/react-product-4/react-pro/src/Hook/Auth/LogUpHook.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport notify from '../UseNotifaction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createNewUser } from '../../Redux/actions/AuthAction';\r\n\r\nconst LogUpHook = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setpasswordConfirm] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    // input value\r\n    const onChangeName = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n    const onChangeEmail = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n    const onChangePasswprd = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n    const onChangepasswordConfirm = (e) => {\r\n        setpasswordConfirm(e.target.value)\r\n    }\r\n\r\n    // Input error\r\n   /* const ValidationValues = () => {\r\n        if (name === \"\") {\r\n            notify(\"Enter Name\", \"error\")\r\n            return;\r\n        }\r\n        if (email === \"\") {\r\n            notify(\"Enter Email\", \"error\")\r\n            return;\r\n        }\r\n        if (password === \"\") {\r\n            notify(\"Enter Password\", \"error\")\r\n            return;\r\n        }\r\n        if (passwordConfirm === \"\") {\r\n            notify(\"ُEnter Confirm Password\", \"error\")\r\n            return;\r\n        }\r\n        if (password !== passwordConfirm) {\r\n            notify(\"من فضلك تاكيد من كلمه السر\", \"error\")\r\n            return;\r\n        }\r\n    }*/\r\n\r\n    const res = useSelector(state => state.AuthReducer.createUser)\r\n    // Save Data\r\n    const OnSubmit = async () => {\r\n        setLoading(true)\r\n        await dispatch(createNewUser({\r\n            name,\r\n            email,\r\n            password,\r\n            passwordConfirm,\r\n        }))\r\n\r\n        setLoading(false)\r\n        console.log(loading)\r\n      \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loading === false) {\r\n            if (res) {\r\n                console.log(res)\r\n                 if (res.token) {\r\n                 localStorage.setItem(\"token\", res.token);\r\n                 console.log(res.data.token)\r\n                 }\r\n                if (res.data.errors){\r\n                    notify(\"\",\"\")\r\n                }\r\n            }\r\n        }\r\n    }, [loading])\r\n\r\n    return [name, email, password, passwordConfirm, loading, onChangeName, onChangeEmail, onChangePasswprd, onChangepasswordConfirm,\r\n         OnSubmit]\r\n}\r\n\r\nexport default LogUpHook"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,gCAA9B;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAEpB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EAEA,MAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACc,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC,CARoB,CAUpB;;EACA,MAAMkB,YAAY,GAAIC,CAAD,IAAO;IACxBV,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;EACH,CAFD;;EAGA,MAAMC,aAAa,GAAIH,CAAD,IAAO;IACzBR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;EACH,CAFD;;EAGA,MAAME,gBAAgB,GAAIJ,CAAD,IAAO;IAC5BN,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;EACH,CAFD;;EAGA,MAAMG,uBAAuB,GAAIL,CAAD,IAAO;IACnCJ,kBAAkB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;EACH,CAFD,CApBoB,CAwBpB;;EACD;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAEI,MAAMI,GAAG,GAAGrB,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBC,UAA5B,CAAvB,CAhDoB,CAiDpB;;EACA,MAAMC,QAAQ,GAAG,YAAY;IACzBZ,UAAU,CAAC,IAAD,CAAV;IACA,MAAMV,QAAQ,CAACF,aAAa,CAAC;MACzBG,IADyB;MAEzBE,KAFyB;MAGzBE,QAHyB;MAIzBE;IAJyB,CAAD,CAAd,CAAd;IAOAG,UAAU,CAAC,KAAD,CAAV;IACAa,OAAO,CAACC,GAAR,CAAYf,OAAZ;EAEH,CAZD;;EAcAf,SAAS,CAAC,MAAM;IACZ,IAAIe,OAAO,KAAK,KAAhB,EAAuB;MACnB,IAAIS,GAAJ,EAAS;QACLK,OAAO,CAACC,GAAR,CAAYN,GAAZ;;QACC,IAAIA,GAAG,CAACO,KAAR,EAAe;UACfC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BT,GAAG,CAACO,KAAlC;UACAF,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACU,IAAJ,CAASH,KAArB;QACC;;QACF,IAAIP,GAAG,CAACU,IAAJ,CAASC,MAAb,EAAoB;UAChBlC,MAAM,CAAC,EAAD,EAAI,EAAJ,CAAN;QACH;MACJ;IACJ;EACJ,CAbQ,EAaN,CAACc,OAAD,CAbM,CAAT;EAeA,OAAO,CAACR,IAAD,EAAOE,KAAP,EAAcE,QAAd,EAAwBE,eAAxB,EAAyCE,OAAzC,EAAkDE,YAAlD,EAAgEI,aAAhE,EAA+EC,gBAA/E,EAAiGC,uBAAjG,EACFK,QADE,CAAP;AAEH,CAjFD;;GAAMvB,S;UAEeH,W,EA8CLC,W;;;KAhDVE,S;AAmFN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}